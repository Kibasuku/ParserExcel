// <auto-generated />
using System;
using Accounting.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ParserExcel.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParserExcel.Models.ExcelFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FileDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FileDateGenerate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExcelFiles");
                });

            modelBuilder.Entity("ParserExcel.Models.ExcelFileInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BalanceAccount")
                        .HasColumnType("int");

                    b.Property<double>("ClBalanceAsset")
                        .HasColumnType("float");

                    b.Property<double>("ClBalanceLiability")
                        .HasColumnType("float");

                    b.Property<int>("ExcelFileId")
                        .HasColumnType("int");

                    b.Property<double>("OpBalanceAsset")
                        .HasColumnType("float");

                    b.Property<double>("OpBalanceLiability")
                        .HasColumnType("float");

                    b.Property<double>("TurnoverAsset")
                        .HasColumnType("float");

                    b.Property<double>("TurnoverLiability")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ExcelFileId");

                    b.ToTable("ExcelFileInfos");
                });

            modelBuilder.Entity("ParserExcel.Models.ExcelFileInfo", b =>
                {
                    b.HasOne("ParserExcel.Models.ExcelFile", "ExcelFile")
                        .WithMany()
                        .HasForeignKey("ExcelFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExcelFile");
                });
#pragma warning restore 612, 618
        }
    }
}
